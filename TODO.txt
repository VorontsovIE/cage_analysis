Что происходит со стартами в интронах? Есть два больших вопроса:
1) старты глубоко в интроне - когда РНК очень длинное. Вполне возможно, что такие РНК просто деградируют
2) пики прямо на интрон-экзонной границе, когда есть старты и из интрона и из экзона. Тут лично мне кажется маловероятным, что транскрипты, которые начинаются в интроне, залезая на него на 1-3-20-100 нуклеотидов (пики бывают сильно разной ширины) почему-то будут менее хороши, чем те транскрипты, что короче на пару нуклеотидов. Сплайсинг этого куска по-любому не пойдет (его либо нет совсем, либо есть только 3'-конец, а его недостаточно для сплайсинга). При этом один интересный момент в том, что 3'-конец интрона выглядит так: (полипиримидиновый тракт)-...-AG 
"The polypyrimidine tract is a region of messenger RNA (mRNA) that promotes the assembly of the spliceosome, the protein complex specialized for carrying out RNA splicing during the process of post-transcriptional modification. The region is rich with pyrimidine nucleotides, especially uracil, and is usually 15-20 base pairs long, located about 5-40 base pairs before the 3' end of the intron to be spliced.[1]"

Меня смущает, что TOP-мотив вполне может оказаться куском полипиримидинового тракта. Вообще говоря, считаем ли мы эти транскрипты живыми или мертвыми может влиять на ROC-кривую.



Проггерские вопросы:

##
## Видимо нужно передавать не exons_on_utr, а все экзоны, а ограничивать уже внутри сплайсирования.
## Остается вопрос, как определять, что транскрипты одинаковы на utr (образуют группу)
## кстати, хорошо бы добавить #hash|#eql? классу TranscriptGroup
##



# TODO:
# 1) Some genes hasn't entrez in mapping but has it in fantom table
# For genes that has no mapping we get mapping from fantom
# 2) Extract gene expression calculation into its own method
# 3) Class Sequence which will be able to store sequence(possibly with gaps) and its markup
# It makes sense for iterating elements of sequence. Splicing and revcomplement should be moved in that class
# Supplementary array of cages also can be indexed with the same (by value or identity) markup
# 4) Extract all identificator mappings into its own class which would also control logic of rejecting data
# 5) TranscriptGroup should encapsulate expression calculation.
# Before that it's useful to renorm peaks according to number of genes containing it in a separate method
# 6) Add support for work with peaks-info file for all tissues
# 7) Make sequence and array more consistent when array and sequence are spliced
# 8) collect cages from gzip-files. Make gzips indexed (bgzf or anything other)
# 9) class EmptyRegion; private Region.new; new method which allows creation of region by 4 arguments, 1 argument, 0 argument (EmptyRegion).
# 10) think about class for position. And about operations: position < region

# 11) !!! Is it correct to look on number of transcripts associated to peak as I do it, taking into account that I have several copies of a peak for several hgnc_ids
# 12) how to use infinite regions? #each on them doesn't work (so splice and collect_cages will work bad). Also negative positions should be tested